{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Equality In An Array](https://www.hackerrank.com/challenges/equality-in-a-array/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function equalizeArray(arr) {\n    const frequencyMap = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const num = arr[i];\n        frequencyMap.set(num, (frequencyMap.get(num) || 0) + 1);\n    }\n\n    let maxFrequency = 0;\n    frequencyMap.forEach((count) => {\n        if (count > maxFrequency) {\n            maxFrequency = count;\n        }\n    });\n\n    const deletions = arr.length - maxFrequency;\n\n    return deletions;\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Halloween Sale](https://www.hackerrank.com/challenges/halloween-sale/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function howManyGames(p, d, m, s) {\n    let gamesBought = 0;\n    let budget = s;\n    let currentPrice = p;\n\n    while (budget >= currentPrice) {\n        budget -= currentPrice;\n        gamesBought++;\n\n        currentPrice = Math.max(currentPrice - d, m);\n    }\n\n    return gamesBought;\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Sherlock And Squares](https://www.hackerrank.com/challenges/sherlock-and-squares/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}